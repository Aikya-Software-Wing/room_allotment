@model ExamRoomAllocation.ViewModel.RoomViewModel

<br />
<br />
<p>
    @Html.ActionLink("Back To List", "RoomSession", new { id = Model.RoomId })
</p>

@{
    int counter = 0;
    var departments = Model.Departments.ToList();
    var students = Model.Students.ToList();
    var roomId = Model.RoomNumber;
    var block = Model.BlockName;
    @: @block block - @roomId
    <br />
    var time = Model.SessionTime.Value.ToShortTimeString();
    var date = Model.Date.Value.ToShortDateString();
    @: @date    @time
    <br />
    var teachers = Model.Teachers;
    foreach (var teacher in Model.Teachers)
    {
        @: Invigilator - @(teacher.Name.ToString()) (@teacher.Department.Name.ToString())
        <br />
    }
}

<table class="table" id="rid">
    <tr>
        @foreach (var department in departments)
        {
            <th>
                @if (Model.ExamCode.Count == 1)
                {
                    @Html.DisplayFor(model => model.ExamCode[0])
                }
                @if (counter == 0 && Model.ExamCode.Count > 1)
                {
                    @Html.DisplayFor(model => model.ExamCode[0])
                }
                @if (counter == 1 && Model.ExamCode.Count > 1)
                {
                    @Html.DisplayFor(model => model.ExamCode[1])
                }
                <br />
                @Html.DisplayFor(modelIteml => department)
                <br />
                @{
                    var index = departments[counter];
                    var studentsList = students.Where(d => d.Department.Name == index).ToList();
                }
                @foreach (var student in studentsList)
                {
                    @Html.DisplayFor(s => student.Id)
                    <br />
                }
            </th>
            counter++;
        }
    </tr>
</table>
<p>
    @Html.ActionLink("Back To List", "RoomSession", new { id = Model.RoomId })
</p>
<a href="#" id="test" onClick="javascript:fnExcelReport();">download</a>
<script>
    function fnExcelReport() {
        var tab_text = '<html xmlns:x="urn:schemas-microsoft-com:office:excel">';
        tab_text = tab_text + '<head><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>';

        tab_text = tab_text + '<x:Name>Test Sheet</x:Name>';

        tab_text = tab_text + '<x:WorksheetOptions><x:Panes></x:Panes></x:WorksheetOptions></x:ExcelWorksheet>';
        tab_text = tab_text + '</x:ExcelWorksheets></x:ExcelWorkbook></xml></head><body>';

        tab_text = tab_text + "<table border='1px'>";
        tab_text = tab_text + $('#rid').html();
        tab_text = tab_text + '</table></body></html>';

        var data_type = 'data:application/vnd.ms-excel';

        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");

        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
            if (window.navigator.msSaveBlob) {
                var blob = new Blob([tab_text], {
                    type: "application/csv;charset=utf-8;"
                });
                navigator.msSaveBlob(blob, 'Test file.xls');
            }
        } else {
            $('#test').attr('href', data_type + ', ' + encodeURIComponent(tab_text));
            $('#test').attr('download', 'Test file.xls');
        }

    }
</script>